(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{370:function(e,t,s){"use strict";s.r(t);var r=s(8),a=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"git进阶命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git进阶命令"}},[e._v("#")]),e._v(" git进阶命令")]),e._v(" "),t("h2",{attrs:{id:"merge-base"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge-base"}},[e._v("#")]),e._v(" merge-base")]),e._v(" "),t("p",[t("code",[e._v("git merge-base --is-ancestor dev HEAD")]),e._v(" 是一个Git命令，用于检查分支关系。")]),e._v(" "),t("p",[e._v("具体来说，它会检查"),t("code",[e._v("dev")]),e._v("分支是否是当前分支（"),t("code",[e._v("HEAD")]),e._v("）的祖先分支。如果是的话，返回0；如果不是的话，返回1。")]),e._v(" "),t("h2",{attrs:{id:"symbolic-ref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#symbolic-ref"}},[e._v("#")]),e._v(" symbolic-ref")]),e._v(" "),t("p",[t("code",[e._v("git symbolic-ref")]),e._v("是一个Git命令，用于获取指定引用（reference）的符号引用（symbolic reference）。")]),e._v(" "),t("p",[e._v("该命令会返回引用的完整名称，例如"),t("code",[e._v("refs/heads/master")]),e._v("，表示当前所在的分支是"),t("code",[e._v("master")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("git symbolic-ref --short")]),e._v("可以返回缩写master")]),e._v(" "),t("h2",{attrs:{id:"git-worktree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-worktree"}},[e._v("#")]),e._v(" git worktree")]),e._v(" "),t("p",[t("strong",[e._v("添加工作树（Add a worktree）")])]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" worktree "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("branch"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" worktree "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("/skybox-main-1.0.X-gn "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.0")]),e._v(".X-gn\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("移除工作树（Remove a worktree）")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" worktree remove "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[t("p",[e._v("优先使用 "),t("code",[e._v("git worktree prune")]),e._v(" 自动清理无效的工作树。")])]),e._v(" "),t("li",[t("p",[e._v("如果不行，可以手动删除 "),t("code",[e._v(".git/worktrees")]),e._v(" 中对应的记录。")])]),e._v(" "),t("li",[t("p",[e._v("避免直接用 "),t("code",[e._v("rm -rf")]),e._v(" 删除工作树目录，正确的方式是通过 "),t("code",[e._v("git worktree remove <path>")]),e._v("。")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);