(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{434:function(s,t,a){"use strict";a.r(t);var n=a(8),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("源码中含有flow类型，直接使用会报错")]),s._v(" "),t("p",[t("strong",[s._v("EXPERIMENTAL")]),s._v(" is not defined")]),s._v(" "),t("p",[s._v("由于使用的是最新源码，含有一些实验性功能，会导致上述错误")]),s._v(" "),t("h3",{attrs:{id:"react中的dispatcher"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react中的dispatcher"}},[s._v("#")]),s._v(" React中的dispatcher")]),s._v(" "),t("p",[s._v("在 React 的函数式组件中，hooks（如 "),t("code",[s._v("useState")]),s._v(" 和 "),t("code",[s._v("useEffect")]),s._v("）需要依赖一个运行时上下文，来跟踪当前正在渲染的组件，以及该组件的状态、上下文等信息。")]),s._v(" "),t("p",[s._v("为了实现这一点，React 使用了一个 "),t("strong",[s._v("dispatcher")]),s._v("，它是一个内部的抽象层，负责将 hooks 调用分发到当前组件的正确上下文中。")]),s._v(" "),t("h3",{attrs:{id:"resolvedispatcher-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resolvedispatcher-的作用"}},[s._v("#")]),s._v(" resolveDispatcher 的作用")]),s._v(" "),t("p",[s._v("在代码中，"),t("code",[s._v("resolveDispatcher")]),s._v(" 的职责是获取当前上下文中正在工作的 "),t("code",[s._v("dispatcher")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolveDispatcher")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dispatcher "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ReactCurrentDispatcher"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("current"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dispatcher "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Invalid hook call. Hooks can only be called inside of the body of a function component.'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" dispatcher"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);