(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{317:function(e,n,t){"use strict";t.r(n);var _=t(8),s=Object(_.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("http.response.end方法")]),e._v(" "),n("p",[n("strong",[e._v("语法：")])]),e._v(" "),n("p",[e._v("http://nodejs.cn/api/http.html#http_response_end_data_encoding_callback")]),e._v(" "),n("p",[n("code",[e._v("response.end([data[, encoding]][, callback])")])]),e._v(" "),n("p",[n("strong",[e._v("接收参数：")])]),e._v(" "),n("p",[e._v("data ： end()执行完毕后要输出的字符，如果指定了 data 的值，那就意味着在执行完 response.end() 之后，会接着执行一条 response.write(data , encoding);")]),e._v(" "),n("p",[e._v("encoding： 对应data的字符编码")]),e._v(" "),n("p",[e._v("1.response.write():将信息写入http响应输出流。 在resposne.end()之前可以多次使用。")]),e._v(" "),n("p",[e._v("2.response.Flush:向客户端发送当前所有缓冲的输出")]),e._v(" "),n("p",[e._v("3.response.end:将当前所有缓冲的输出发送到客户端，停止该页的执行，并引发EndRequest事件。")]),e._v(" "),n("p",[e._v("4.response.Close：关闭到客户端的套接字连接。")]),e._v(" "),n("p",[e._v("What is chunk in nodejs?")]),e._v(" "),n("p",[e._v("http://nodejs.cn/api/stream/event_data.html")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("chunk")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#buffer_class_buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Buffer"),n("OutboundLink")],1),e._v(" | String | any数据块。 对于非对象模式的流， "),n("code",[e._v("chunk")]),e._v(" 可以是字符串或 "),n("code",[e._v("Buffer")]),e._v("。 对于对象模式的流， "),n("code",[e._v("chunk")]),e._v(" 可以是任何 JavaScript 值，除了 "),n("code",[e._v("null")]),e._v("。")])])])}),[],!1,null,null,null);n.default=s.exports}}]);