(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{366:function(s,t,e){"use strict";e.r(t);var a=e(8),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"fetch和pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch和pull"}},[s._v("#")]),s._v(" fetch和pull")]),s._v(" "),t("h2",{attrs:{id:"fetch和pull-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch和pull-2"}},[s._v("#")]),s._v(" fetch和pull")]),s._v(" "),t("p",[s._v("一直以来我拉代码用的都是git pull\n看到有说不要用git pull，可能会看不到冲突解决，尽量用git fetch + git merge")]),s._v(" "),t("h3",{attrs:{id:"fetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[s._v("#")]),s._v(" fetch")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git fetch <远程主机名> <远程分支名>:<本地分支名>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("例如从远程的origin仓库的master分支下载代码到本地并新建一个temp分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git fetch origin master:temp\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果上述没有冒号，则表示将远程"),t("code",[s._v("origin")]),s._v("仓库的"),t("code",[s._v("master")]),s._v("分支拉取下来到本地当前分支。")]),s._v(" "),t("p",[s._v("git fetch 后代码不会合并，需要手动执行"),t("code",[s._v("git merge")]),s._v("合并")]),s._v(" "),t("p",[s._v("但是我之前使用sourceTree拉代码的时候有冲突都会弹框提示，然后解决冲突后才能commit\n于是看了下sourceTree的命令行，发现sourceTree执行的是先git fetch master，再git pull master。")]),s._v(" "),t("p",[s._v("取消勾选合并代码后，执行 git pull --no-commit\n此命令和 fetch 效果类似")]),s._v(" "),t("h2",{attrs:{id:"git-fork的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-fork的使用"}},[s._v("#")]),s._v(" git fork的使用")]),s._v(" "),t("p",[s._v("添加上游（upstream）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" upstream https://github.com/original-repo/main-project.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("然后检查")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("输出示例")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("origin    https://github.com/yourname/custom-project.git (fetch)\norigin    https://github.com/yourname/custom-project.git (push)\nupstream  https://github.com/original-repo/main-project.git (fetch)\nupstream  https://github.com/original-repo/main-project.git (push)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"拉取上游更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取上游更新"}},[s._v("#")]),s._v(" 拉取上游更新")]),s._v(" "),t("p",[t("strong",[s._v("方式 1：使用 "),t("code",[s._v("merge")]),s._v("（合并方式）")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch upstream\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge upstream/main\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("方式 2：使用 "),t("code",[s._v("rebase")]),s._v("（重写提交历史，推荐）")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch upstream\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase upstream/main\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("如果原仓库有很多分支，fork的仓库也会有很多分支吗，但是我不需要这么多分支")])]),s._v(" "),t("p",[s._v("只同步 "),t("code",[s._v("main")]),s._v(" 并丢弃其他分支")]),s._v(" "),t("p",[s._v("如果你已经拉取了很多 "),t("code",[s._v("upstream")]),s._v(" 分支，但你只想保留 "),t("code",[s._v("main")]),s._v("，可以重置 "),t("code",[s._v("git fetch")]),s._v(" 的行为。")]),s._v(" "),t("p",[t("strong",[s._v("删除 "),t("code",[s._v("upstream")]),s._v(" 远程仓库")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote remove upstream\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("重新添加 "),t("code",[s._v("upstream")]),s._v(" 并指定只跟踪 "),t("code",[s._v("main")])])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" upstream "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("upstream_repo_url"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch upstream main\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("同步 "),t("code",[s._v("main")]),s._v(" 并合并")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge upstream/main\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("方法 1：手动 Fork 后，仅克隆指定分支")])]),s._v(" "),t("blockquote",[t("p",[s._v("适用于："),t("strong",[s._v("你只能在 Gitee/GitHub 上 Fork 整个仓库，但本地只想拉取某个分支")])])]),s._v(" "),t("p",[s._v("1️⃣ "),t("strong",[s._v("先在 Gitee/GitHub 上 Fork 仓库")]),s._v("（默认 Fork 所有分支）。\n2️⃣ "),t("strong",[s._v("本地克隆时，只拉取一个分支")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --single-branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--branch")]),s._v(" develop https://gitee.com/yourname/repo.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("方法 2：使用 "),t("code",[s._v("git remote")]),s._v(" 只同步某个分支")])]),s._v(" "),t("blockquote",[t("p",[s._v("适用于："),t("strong",[s._v("你不想在 Gitee/GitHub 上 Fork 整个仓库，而是想手动同步指定分支")])])]),s._v(" "),t("p",[s._v("1️⃣ "),t("strong",[s._v("初始化一个空仓库")]),s._v("（不克隆全部内容）：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init repo\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" repo\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("2️⃣ "),t("strong",[s._v("添加远程仓库（但不下载所有分支）")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://gitee.com/original/repo.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("3️⃣ "),t("strong",[s._v("只拉取某个分支")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("分支名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("分支名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" origin/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("分支名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("4️⃣ "),t("strong",[s._v("添加你的 Fork 仓库为远程")]),s._v("（用于提交代码）：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("5️⃣ "),t("strong",[s._v("推送到你的 Fork 仓库")]),s._v("：")]),s._v(" "),t("p",[s._v("如果你有原仓库的写入权限，git push upstream --delete dev 会删除原仓库的dev分支")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push upstream "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);