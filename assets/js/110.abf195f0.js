(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{401:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"regexp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp"}},[t._v("#")]),t._v(" RegExp")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Regular_Expressions"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Global_Objects/RegExp"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"断言语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断言语法"}},[t._v("#")]),t._v(" 断言语法")]),t._v(" "),s("p",[t._v("lookahead 先行，x(?=parttern) 模式")]),t._v(" "),s("p",[t._v("lookbehind 后行，(?<=pattern)x模式")]),t._v(" "),s("h5",{attrs:{id:"正向先行断言-pattern-zero-width-positive-lookahead-assertion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正向先行断言-pattern-zero-width-positive-lookahead-assertion"}},[t._v("#")]),t._v(" 正向先行断言(?=pattern) zero-width positive lookahead assertion")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minimax-1256590847.cos.ap-shanghai.myqcloud.com/img/image-20201012223449023.png",alt:"image-20201012223449023"}})]),t._v(" "),s("h5",{attrs:{id:"负向先行断言-pattern-正向否定查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负向先行断言-pattern-正向否定查找"}},[t._v("#")]),t._v(" 负向先行断言(?!pattern) / 正向否定查找")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minimax-1256590847.cos.ap-shanghai.myqcloud.com/img/image-20201012230251496.png",alt:"image-20201012230251496"}})]),t._v(" "),s("h5",{attrs:{id:"正向后行断言-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正向后行断言-pattern"}},[t._v("#")]),t._v(" 正向后行断言(?<=pattern)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minimax-1256590847.cos.ap-shanghai.myqcloud.com/img/image-20201012223522428.png",alt:"image-20201012223522428"}})]),t._v(" "),s("h5",{attrs:{id:"负向后行断言-pattern-负向否定查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负向后行断言-pattern-负向否定查找"}},[t._v("#")]),t._v(" 负向后行断言(?<!pattern) / 负向否定查找")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://minimax-1256590847.cos.ap-shanghai.myqcloud.com/img/image-20201012230527391.png",alt:"image-20201012230527391"}})]),t._v(" "),s("p",[s("strong",[t._v("～～关于后行断言，js目前不支持～～")])]),t._v(" "),s("p",[t._v("更新：新版浏览器已支持")]),t._v(" "),s("h4",{attrs:{id:"使用变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[t._v("#")]),t._v(" 使用变量")]),t._v(" "),s("p",[t._v("首先字面量表示法不支持变量，必须用RegExp构造函数")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" variable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ’变量‘\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("variable"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h4",{attrs:{id:"正则表达式动态拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式动态拼接"}},[t._v("#")]),t._v(" 正则表达式动态拼接")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" matchStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  matchStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(")*")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("matchStr"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /(a)*(b)*(c)*/g")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"贪婪模式与非贪婪"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式与非贪婪"}},[t._v("#")]),t._v(" 贪婪模式与非贪婪")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("?")])]),t._v(" "),s("p",[t._v("当该字符紧跟在任何一个其他限制符（*,+,?，{"),s("em",[t._v("n")]),t._v("}，{"),s("em",[t._v("n")]),t._v(",}，{"),s("em",[t._v("n")]),t._v(","),s("em",[t._v("m")]),t._v("}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“"),s("code",[t._v("oooo")]),t._v("”，“"),s("code",[t._v("o+?")]),t._v("”将匹配单个“"),s("code",[t._v("o")]),t._v("”，而“"),s("code",[t._v("o+")]),t._v("”将匹配所有“"),s("code",[t._v("o")]),t._v("”。")]),t._v(" "),s("h3",{attrs:{id:"捕获组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#捕获组"}},[t._v("#")]),t._v(" 捕获组")]),t._v(" "),s("p",[t._v("https://www.runoob.com/w3cnote/java-capture-group.html")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("命名捕获组(?Expression)和普通捕获组(Expression)")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(?<test>hello)+\\s(br)+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (?<捕获组名称>)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("s")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("br"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("g\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ()")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(?<test>hello)+\\s(br)+")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello br'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("下表列出这个脚本的返回值：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("对象")]),t._v(" "),s("th",[t._v("属性/索引")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("例子")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("result")]),t._v(" "),s("td",[t._v("[0]")]),t._v(" "),s("td",[t._v("匹配的全部字符串")]),t._v(" "),s("td",[s("code",[t._v("hello br")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("[1], ...["),s("em",[t._v("n")]),t._v(" ]")]),t._v(" "),s("td",[t._v("括号中的分组捕获")]),t._v(" "),s("td",[t._v("[1] = hello"),s("br"),t._v("[2] = br")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("Index")]),t._v(" "),s("td",[t._v("匹配到的字符位于原始字符串的基于 0 的索引值")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("Input")]),t._v(" "),s("td",[t._v("原始字符串")]),t._v(" "),s("td",[t._v("hello br")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("groups")]),t._v(" "),s("td",[t._v("捕获组")]),t._v(" "),s("td",[t._v('如果没有就是 undefined,这里是 groups: {test: "hello"}')])]),t._v(" "),s("tr",[s("td",[t._v("re")]),t._v(" "),s("td",[t._v("lastIndex")]),t._v(" "),s("td",[t._v("下一次匹配开始的位置")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("ignoreCase")]),t._v(" "),s("td",[t._v('是否使用了 "'),s("code",[t._v("i")]),t._v('" 标记使正则匹配忽略大小写')]),t._v(" "),s("td",[s("code",[t._v("true")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("global")]),t._v(" "),s("td",[t._v('是否使用了 "'),s("code",[t._v("g")]),t._v('" 标记来进行全局的匹配.')]),t._v(" "),s("td",[s("code",[t._v("true")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("multiline")]),t._v(" "),s("td",[t._v('是否使用了 "'),s("code",[t._v("m")]),t._v('" 标记使正则工作在多行模式（也就是，^ 和 $ 可以匹配字符串中每一行的开始和结束（行是由 \\n 或 \\r 分割的），而不只是整个输入字符串的最开始和最末尾处。）')]),t._v(" "),s("td",[s("code",[t._v("false")])])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("source")]),t._v(" "),s("td",[t._v("正则匹配的字符串")]),t._v(" "),s("td",[s("code",[t._v("(?<test>hello)+\\s(br)+")])])])])]),t._v(" "),s("h2",{attrs:{id:"replace的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replace的用法"}},[t._v("#")]),t._v(" replace的用法")]),t._v(" "),s("p",[t._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace")]),t._v(" "),s("p",[t._v("注意⚠️：replace不会修改原字符串!!!")]),t._v(" "),s("p",[t._v("replace的第二个参数如果是一个字符串，则$是具有特殊含义的字符，如果想将匹配的内容替换成$, 需要使用$$")]),t._v(" "),s("p",[t._v("替换字符串特殊变量：")]),t._v(" "),s("ul",[s("li",[t._v('$$  插入一个 "$"。')]),t._v(" "),s("li",[t._v("$& 插入匹配的子串。")])]),t._v(" "),s("p",[s("code",[t._v("$&")]),t._v("：表示匹配的子串")]),t._v(" "),s("p",[s("code",[t._v("$0")]),t._v("：表示整个匹配的子字符串")]),t._v(" "),s("p",[s("code",[t._v("$1")]),t._v("：表示第一个捕获组的匹配结果")]),t._v(" "),s("p",[s("code",[t._v("$2")]),t._v("：表示第二个捕获组的匹配结果，以此类推。")]),t._v(" "),s("p",[t._v("replace的第二个参数可以是一个函数")]),t._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用函数作为replace的第二个参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\d+)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("match: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("match"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整个匹配的子字符串")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("p1: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("p1"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个捕获组的匹配结果")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("offset: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("offset"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配项在原字符串中的偏移位置")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("string: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被匹配的原字符串")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Number: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回替换字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"数字千分位表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字千分位表示"}},[t._v("#")]),t._v(" 数字千分位表示")]),t._v(" "),s("p",[t._v("运行过程: https://www.cnblogs.com/lvmylife/p/8287247.html")]),t._v(" "),s("h4",{attrs:{id:"时间与歌词匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间与歌词匹配"}},[t._v("#")]),t._v(" 时间与歌词匹配")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配出 时间和内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[00:00.000] 作词 : 李荣浩\\n[00:01.000] 作曲 : 李荣浩\\n[00:02.000] 编曲 : 李荣浩\\n[00:03.000]\\n[00:29.799] 电视一直闪\\n[00:33.441] 联络方式都还没删\\n[00:37.146] 你待我的好\\n[00:40.752] 我却错手毁掉\\n[00:44.392] 也曾一起想\\n[00:48.023] 有个地方睡觉吃饭\\n[00:51.674] 可怎么去熬 日夜颠倒\\n[00:55.063] 连头款也凑不到\\n[00:59.193] 墙板 被我砸烂\\n[01:02.574] 到现在还没修\\n[01:05.937] 一碗热的粥\\n[01:07.960] 你怕我没够\\n[01:09.829] 都留一半带走\\n[01:12.809] 给你形容\\n[01:15.276] 美好今后 你常常眼睛会红\\n[01:20.501] 原来心疼我\\n[01:22.517] 我那时候不懂\\n[01:27.316] 假如我年少有为 不自卑\\n[01:31.632] 懂得什么是珍贵\\n[01:34.174] 那些美梦\\n[01:37.783] 没给你 我一生有愧\\n[01:41.863] 假如我年少有为 知进退\\n[01:46.204] 才不会让你替我受罪\\n[01:50.032] 婚礼上 多喝几杯\\n[01:53.263] 和你现在那位\\n[02:00.430]\\n[02:26.175] 也曾一起想\\n[02:29.798] 有个地方睡觉吃饭\\n[02:33.428] 可怎么去熬 日夜颠倒\\n[02:36.812] 连头款也凑不到\\n[02:40.958] 墙板 被我砸烂\\n[02:44.360] 到现在还没修\\n[02:47.730] 一碗热的粥\\n[02:49.757] 你怕我没够\\n[02:51.589] 都留一半带走\\n[02:54.622] 给你形容\\n[02:57.078] 美好今后 你常常眼睛会红\\n[03:02.280] 原来心疼我\\n[03:04.333] 我那时候不懂\\n[03:09.108] 假如我年少有为 不自卑\\n[03:13.464] 懂得什么是珍贵\\n[03:15.936] 那些美梦\\n[03:19.553] 没给你 我一生有愧\\n[03:23.677] 假如我年少有为 知进退\\n[03:27.974] 才不会让你替我受罪\\n[03:31.834] 婚礼上 多喝几杯\\n[03:35.007] 和你现在那位\\n[03:41.862] 假如我年少有为 不自卑\\n[03:46.181] 尝过后悔的滋味\\n[03:48.651] 金钱地位\\n[03:52.300] 搏到了却好想退回\\n[03:56.399] 假如我年少有为 知进退\\n[04:00.701] 才不会让你替我受罪\\n[04:04.629] 婚礼上 多喝几杯\\n[04:07.732] 和你现在那位\\n[04:15.261] 在婚礼上 多喝几杯\\n[04:18.755] 祝我年少有为\\n[04:27.855]\\n[04:29.000] 制作人：李荣浩\\n[04:29.500] 吉他：李荣浩\\n[04:30.000] 贝斯：李荣浩\\n[04:30.500] 鼓：Alex\\n[04:31.000] 和声编写：李荣浩\\n[04:31.500] 和声：李荣浩\\n[04:32.000] 弦乐编写：李荣浩\\n[04:32.500] 弦乐：国际首席爱乐乐团\\n[04:33.000] 录音师：李荣浩\\n[04:33.500] 混音师：李荣浩\\n[04:34.000] 录音室：北京一样音乐录音室\\n[04:34.500] 混音室：北京一样音乐录音室\\n[04:35.000] 母带后期制作人：李荣浩\\n[04:35.500] 母带后期处理工程师：周天澈TC Z.\\n[04:36.000] 母带后期处理录音室：TC Faders\\n[04:37.000]OP：一样音乐工作室\\n[04:38.000]SP：酷亚音乐 (深圳) 有限公司 admin by One Asia Music Inc. 酷亚音乐股份有限公司\\n'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\[.+?\\]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const res2 = str.match(/\\D*(?=\\)/g)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\[(.+?)\\])((?:\\])?.*?\\n)")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配时间和歌词")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(?<=\\]).*?\\n")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配歌词")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /(?<=\\]).*?(?=\\n)/g  滤除 \\n")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(res1)")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("blockquote",[s("p",[t._v("字符串中的\\n 指 换行符 , 匹配时需要用\\n ; 如果想匹配字符串\\n 则用的是\\\\n")])]),t._v(" "),s("h2",{attrs:{id:"regexp方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp方法"}},[t._v("#")]),t._v(" RegExp方法")]),t._v(" "),s("h3",{attrs:{id:"array-prototype-some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-prototype-some"}},[t._v("#")]),t._v(" Array.prototype.some()")]),t._v(" "),s("p",[s("code",[t._v("some()")]),t._v(" 方法测试数组中是不是至少有1个元素通过了被提供的函数测试。它返回的是一个Boolean类型的值。")]),t._v(" "),s("h3",{attrs:{id:"match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("regexp")])]),t._v(" "),s("p",[t._v("一个"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式"),s("OutboundLink")],1),t._v("对象。如果传入一个非正则表达式对象，则会隐式地使用 "),s("code",[t._v("new RegExp(obj)")]),t._v(" 将其转换为一个 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("RegExp")]),s("OutboundLink")],1),t._v(" 。如果你没有给出任何参数并直接使用match() 方法 ，你将会得到一 个包含空字符串的 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Array")]),s("OutboundLink")],1),t._v(' ：[""]')]),t._v(" "),s("h3",{attrs:{id:"regex-test-str"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regex-test-str"}},[t._v("#")]),t._v(" regex.test(str)")]),t._v(" "),s("p",[t._v("查看正则表达式与指定的字符串是否匹配。返回 "),s("code",[t._v("true")]),t._v(" 或 "),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("abc")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"str-search-regex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#str-search-regex"}},[t._v("#")]),t._v(" str.search(regex)")]),t._v(" "),s("p",[t._v("查看字符串与指定的正则表达式是否匹配。返回索引，未匹配到则返回-1。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dabcd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("abc")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);